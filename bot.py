from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import os

TOKEN = os.getenv("BOT_TOKEN")

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        ["üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", "üõí –ö—É–ø–∏—Ç—å"],
        ["üë®‚Äçüíª –ü–æ–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", "‚ùì –î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å"]
    ],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Å–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –Ω–∞—à—É —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É!",
        reply_markup=main_menu
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()
    if text == "üìÑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏":
        await update.message.reply_text("üìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: example.com/manual.pdf")
    elif text == "üõí –ö—É–ø–∏—Ç—å":
        await update.message.reply_text("üõç –ö–∞—Ç–∞–ª–æ–≥:\n1. –ë–∞—Å—Å–µ–π–Ω ‚Äî 2990 ‚ÇΩ\n2. –ß–µ—Ö–æ–ª ‚Äî 1490 ‚ÇΩ\n3. –¢–µ–Ω—Ç ‚Äî 2100 ‚ÇΩ")
    elif text == "üë®‚Äçüíª –ü–æ–∑–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞":
        await update.message.reply_text("–û–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.")
    elif text == "‚ùì –î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å":
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.")
    else:
        await update.message.reply_text("–Ø –Ω–µ –ø–æ–Ω—è–ª —Å–æ–æ–±—â–µ–Ω–∏–µ. –í—ã–±–µ—Ä–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=main_menu)

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
